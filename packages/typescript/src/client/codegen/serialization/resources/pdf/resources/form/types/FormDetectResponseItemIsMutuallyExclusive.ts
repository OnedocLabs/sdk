/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index";
import * as Fileforge from "../../../../../../api/index";
import * as core from "../../../../../../core";

export const FormDetectResponseItemIsMutuallyExclusive: core.serialization.ObjectSchema<
    serializers.pdf.FormDetectResponseItemIsMutuallyExclusive.Raw,
    Fileforge.pdf.FormDetectResponseItemIsMutuallyExclusive
> = core.serialization.object({
    type: core.serialization.stringLiteral("PDFRadioGroup"),
    options: core.serialization.list(core.serialization.string()).optional(),
    selected: core.serialization.string().optional(),
    isMutuallyExclusive: core.serialization.boolean().optional(),
    isOffToggleable: core.serialization.boolean().optional(),
});

export declare namespace FormDetectResponseItemIsMutuallyExclusive {
    interface Raw {
        type: "PDFRadioGroup";
        options?: string[] | null;
        selected?: string | null;
        isMutuallyExclusive?: boolean | null;
        isOffToggleable?: boolean | null;
    }
}
